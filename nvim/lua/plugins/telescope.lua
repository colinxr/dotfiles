-- Telescope configuration with proper file ignoring
return {
  {
    "nvim-telescope/telescope.nvim",
    opts = {
      defaults = {
        -- File finding configuration
        file_ignore_patterns = {
          "vendor/",
          "node_modules/",
          ".git/",
          ".DS_Store",
          "*.pyc",
          "__pycache__/",
          ".pytest_cache/",
          ".coverage",
          "dist/",
          "build/",
          ".next/",
          ".nuxt/",
          "coverage/",
          ".nyc_output/",
          "*.log",
          "*.tmp",
          "*.temp",
        },
        -- Grep configuration
        vimgrep_arguments = {
          "rg",
          "--color=never",
          "--no-heading",
          "--with-filename",
          "--line-number",
          "--column",
          "--smart-case",
          "--hidden",
          "--glob=!vendor/**",
          "--glob=!node_modules/**",
          "--glob=!.git/**",
          "--glob=!*.pyc",
          "--glob=!__pycache__/**",
          "--glob=!.pytest_cache/**",
          "--glob=!dist/**",
          "--glob=!build/**",
          "--glob=!.next/**",
          "--glob=!.nuxt/**",
          "--glob=!coverage/**",
          "--glob=!.nyc_output/**",
          "--glob=!*.log",
          "--glob=!*.tmp",
          "--glob=!*.temp",
        },
        -- Layout configuration
        layout_strategy = "horizontal",
        layout_config = {
          horizontal = {
            prompt_position = "top",
            preview_width = 0.55,
            results_width = 0.8,
          },
          vertical = {
            mirror = false,
          },
          width = 0.87,
          height = 0.80,
          preview_cutoff = 120,
        },
        -- Sorting and filtering
        sorting_strategy = "ascending",
        winblend = 0,
        border = {},
        borderchars = { "─", "│", "─", "│", "╭", "╮", "╯", "╰" },
        color_devicons = true,
        use_less = true,
        set_env = { ["COLORTERM"] = "truecolor" },
      },
      pickers = {
        find_files = {
          find_command = {
            "fd",
            "--type",
            "f",
            "--strip-cwd-prefix",
            "--hidden",
            "--exclude",
            "vendor",
            "--exclude",
            "node_modules",
            "--exclude",
            ".git",
            "--exclude",
            "*.pyc",
            "--exclude",
            "__pycache__",
            "--exclude",
            ".pytest_cache",
            "--exclude",
            "dist",
            "--exclude",
            "build",
            "--exclude",
            ".next",
            "--exclude",
            ".nuxt",
            "--exclude",
            "coverage",
            "--exclude",
            ".nyc_output",
            "--exclude",
            "*.log",
            "--exclude",
            "*.tmp",
            "--exclude",
            "*.temp",
          },
        },
        live_grep = {
          additional_args = function()
            return {
              "--glob=!vendor/**",
              "--glob=!node_modules/**",
              "--glob=!.git/**",
              "--glob=!*.pyc",
              "--glob=!__pycache__/**",
              "--glob=!.pytest_cache/**",
              "--glob=!dist/**",
              "--glob=!build/**",
              "--glob=!.next/**",
              "--glob=!.nuxt/**",
              "--glob=!coverage/**",
              "--glob=!.nyc_output/**",
              "--glob=!*.log",
              "--glob=!*.tmp",
              "--glob=!*.temp",
            }
          end,
        },
        grep_string = {
          additional_args = function()
            return {
              "--glob=!vendor/**",
              "--glob=!node_modules/**",
              "--glob=!.git/**",
              "--glob=!*.pyc",
              "--glob=!__pycache__/**",
              "--glob=!.pytest_cache/**",
              "--glob=!dist/**",
              "--glob=!build/**",
              "--glob=!.next/**",
              "--glob=!.nuxt/**",
              "--glob=!coverage/**",
              "--glob=!.nyc_output/**",
              "--glob=!*.log",
              "--glob=!*.tmp",
              "--glob=!*.temp",
            }
          end,
        },
      },
    },
  },
}
